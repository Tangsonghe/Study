cglib 采用集成的方式，覆盖父类的方法
jdk 采用的是实现的方式，必须要求代理的目标对象一定要实现一个接口

两个代理的思想都是一样的，都是通过生存字节码，重组成一个新的类

jdk proxy  对于用户而言，依赖更强（必须要实现一个接口），调用也更复杂
cglib  对目标类没有任何的要求,  cglib生成过程优化过，效率更高，性能也更高，底层没有用到反射。
jdk prox 生成的逻辑较为简单，但执行效率低，每次都要用反射。

cglib有个坑，目标代理类不能有final的方法，会忽略final修饰的方法。在cglib中不能代理的。